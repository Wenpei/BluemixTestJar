{
    "collab_server" : "",
    "contents" : "setOldClass(\"jobj\")\n\nSPSSModel <-\n  setClass(\"SPSSModel\", slots = list(jobj = \"jobj\"))\n\n#'\n#'\n#'\n#' @param object A fitted MLlib model\n#' @param newData a SparkDataFrame for testing.\n#' @return a List with Two Step Model summary.\n#' @rdname spss.summary\n#' @export\n#'\nsetMethod(\"spss.summary.xml\", signature(object = \"SPSSModel\"),\n          function(object){\n            spss.summary_internal(object)\n          })\n\n\n#'\n#' @param object A fitted SPSS Model\n#' @param newData a DataFrame for testing.\n#' @return returns a DataFrame containing predicted column\n#' @name spss.predict\n#' @export\nsetMethod(\"spss.predict\", signature(object = \"SPSSModel\"),\n          function(object, newData) {\n            spss.predict_internal(object, newData)\n          })\n\n#'\n#' @param object A fitted SPSS Model\n#' @param path a folder path for mode export.\n#' @param overwrite Overwrites or not if the output path already exists. Default is FALSE\n#'                  which means throw exception if the output path exists.\n#' @name spss.save\n#' @export\nsetMethod(\"spss.save\", signature(object = \"SPSSModel\"),\n          function(object, path, overwrite = FALSE) {\n            spss.write_internal(object, path, overwrite)\n          })\n\n#'\n#' @param path a folder path for mode export.\n#' @name spss.load\n#' @export\nspss.load <- function(path) {\n            spss.load_internal(path)\n          }\n",
    "created" : 1480492564502.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "320835482",
    "id" : "A39F7603",
    "lastKnownWriteTime" : 1480662220,
    "last_content_update" : 1480662220392,
    "path" : "C:/aWorkFolder/gitibm/project/spark-spss-r-pkg/SPSSonSparkR/R/common.R",
    "project_path" : "R/common.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}