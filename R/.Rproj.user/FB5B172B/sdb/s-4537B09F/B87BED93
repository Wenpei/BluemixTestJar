{
    "collab_server" : "",
    "contents" : "setOldClass(\"jobj\")\n\n#' S4 class that represents an LinearRegressionModel Model\n#'\n#' @param jobj a Java object reference to the Wrapper\n#' @export\n#' @note LinearRegressionModel for SPSS on SPARK\nLinearRegressionModel <-\n  setClass(\"LinearRegressionModel\", slots = c(name = \"character\"), contains = \"SPSSModel\")\n#' The Linear Regression Model\n#'\n#' The linear regression model analyzes the predictive relationship between a continuous target and one\n#'  or more predictors which can be continuous or categorical.\n#'\n#' Features of the linear regression model include automatic interaction effect detection, forward\n#' stepwise model selection, diagnostic checking, and unusual category detection based on EMMEANS.\n#'\n#' @param randomSeed Param for specifying the random seed value for ASE as a method. Must\n#'                        be > 0. Default: 54752075.\n#' @param PIn Param for significance level for F,,enter,, value. Must be > 0 and <\n#'                        1. Default: 0.05.\n#' @param maxParamsAllEffects Param for specifying the maximum number of parameters the system can\n#'                        handle. Must be > 0. Default: 5000.\n#' @param numOfExportedOutliers Param for number of exported influential outliers sorted with\n#'                        descending Cook's distances. Must be a positive number. Default: 100. This\n#'                        parameter is active when detectInfluentialOutlier = true.\n#' @param criteria4ForwardStepwise Param for criteria used to enter or remove an effect in each step in\n#'                        forward stepwise: - \"adjustedRSquare\" - \"AICC\" - \"ASE\" - \"FStatistics\"\n#'                        Default: adjustedRSquare This parameter is active when varSelectionMethod =\n#'                        forwardStepwise.\n#' @param CIn Param for specifying a confidence interval level. Must be > 0.0 and <\n#'                        1.00. Default: 0.95.\n#' @param factorSortOrder Param for specifying the sorting order for factors: - \"ASCENDING\" -\n#'                        \"DESCENDING\" Default:ASCENDING\n#' @param detectInfluentialOutliers Param for detecting influential outliers and exporting the related\n#'                        statistics. Default: true.\n#' @param detectTwoWayInteraction Param for two-way interaction detection. It is a sub-option under\n#'                        variable selection. Detect squared term of each covariate will be created and\n#'                        included in the design matrix. Detect each pair of two factors should be\n#'                        included in the design matrix. Detect each pair of one covariate and one\n#'                        factor should be included in the design matrix. Default:true.\n#' @param varSelectionMethod Param for specifying a model selection method: - \"bestSubsets\" -\n#'                        \"forwardStepwise\" - \"none\" Default: forwardStepwise\n#' @param maxSteps Param for maximum number of steps for forwardStepwise as model\n#'                        selection method. Must be a positive number. Default: Three times maxEffects.\n#' @param maxEffects4AllPossibleSubsets Param for the maximum number of effects for all possible subsets in\n#'                        \"Best subsets\" method. Must be a positive number. Default: 20. This parameter\n#'                        is active when varSelectionMethod = bestSubsets.\n#' @param detectInteractionMaxIter Param for specifying the maximum number of iterations in an iterative\n#'                        process of detecting interaction of two factors. Must be > 0. Default: 10.\n#' @param forwardStepwiseRule Param for specifying a rule for entering or removing with interaction\n#'                        effects in forward stepwise: - \"none\" - \"single\" - \"sFactor\" - \"containment\"\n#'                        Default:single\n#' @param freqField Param for specifying the frequency weight. The frequency weight must\n#'                        be a numeric variable.\n#' @param m1InteractionEffects Param for specifying threshold value to conduct interaction effect\n#'                        detection. Must be > 0. Default: 100.\n#' @param detectInteractionSig Param for specifying significance level for F statistics in automatic\n#'                        interaction effect detection. Must be > 0 and < 1. Default: 0.05.\n#' @param criteria4BestSubsets Param for criteria used to enter or remove an effect in each step in\n#'                        best subsets: - \"adjustedRSquare\" - \"AICC\" - \"ASE\" Default: adjustedRSquare\n#'                        This parameter is active when varSelectionMethod = bestSubsets.\n#' @param recordIDFieldList Param for specifying the record ID fields.\n#' @param diagnosticPlots Param for exporting statistics for diagnostic plots. Default: true.\n#' @param effectSizeType4Coefficients Param for specifying computation of effect size for coefficients: -\n#'                        \"None\" - \"PartialEtaSquared\" Default: None\n#' @param regrWeightField Param for specifying the regression weight. The regression weight\n#'                        must be a numeric variable.\n#' @param sigLevel Param for specifying a significance level for all tests . Must be > 0\n#'                        and < 1. Default: 0.05.\n#' @param factorsCombinationsThreshold Param for the maximum number of factors and category combinations\n#'                        with incomplete design while Linear computes EMMEANS. Must be >= 0. Default:\n#'                        10,000,000L. If the number of levels of factors and categories are larger than\n#'                        this threshold, a warning will be issued and EMMEANS information will not be\n#'                        output.\n#' @param plotCutPointNum Param for specifying the number of cut points for scatter plots. Must\n#'                        be >= 5 and <= 100. Default: 19.\n#' @param intercept Param for including the intercept in model. Default: true.\n#' @param detectInteractionTol Param for specifying the tolerance value for stopping criterion in an\n#'                        iterative process of detecting interaction of two factors. Must be > 10^-12^\n#'                        and < 1. Default: 1.0e-6.\n#' @param detectUnusualCategories Param for detecting unusual categories or category combinations based\n#'                        on EMMEANS and exporting statistics for the Grouping and Unusual Categories\n#'                        tables. Default: true. If false, unusual categories will not be detected.\n#' @param useCustomMaxSteps Param for specifying a custom maximum number of steps for\n#'                        forwardStepwise as model selection method. Default: false.\n#' @param effectSizeType4ModelEffects Param for specifying computation of effect size for model effects: -\n#'                        \"None\" - \"PartialEtaSquared\" - \"EtaSquared\" - \"All\" Default:None\n#' @param m2SelectedMainEffects Param for specifying threshold value to select main effects for\n#'                        interaction effect detection. Must be > 0. Default: 50.\n#' @param POut Param for Significance level for F,,remove,, value. Must be > 0 and <\n#'                        1. Default: 0.1. POut should be larger than PIn.\n#' @param homoTest Param for conducting a Homoskedasticity test. Default: true.\n#' @param robustEstimator Param for specifying a robust estimator: - \"HC0\" - \"HC1\" - \"HC2\" -\n#'                        \"HC3\" Default: HC0\n#' @param effectEntryTol Param for specifying the singularity tolerance value for checking\n#'                        effect entry conditions. Must be >= 10^-12^ and <= 1. Default: 0.0001.\n#' @param useCustomMaxEffects Param for user specifying a custom max effects in the final model.\n#'                        Default: false.\n#' @param plotBinThreshold Param for maximum data size for scatter plot binning. Must be >= 20.\n#'                        Default: 20.\n#' @param maxEffects Param for maximum number of effects in the final model. Must be a\n#'                        positive number. Default: The maximum number of candidate model effects.\n#' @param numOfModelsToExport Param for specifying the number of models from model selection for\n#'                        which to export information for display. Must be > 0 and < 100. Default: 10.\n#' @param turnOnFactorSortOrder Param for turning on / off sorting order for factors. Default: true.\n#' @name classificationandregression.linearregression\n#' @export\n#' @examples\n#' \\dontrun{\n#' sc <- sparkR.init()\n#' data(iris)\n#' sqlContext <- sparkRSQL.init(sc)\n#' df <- createDataFrame(sqlContext, iris)\n#' twostepmodel <- classificationandregression.linearregression(df,Species~Sepal_Length+Sepal_Width)\n#'\n#' scoredata <- spss.predict(twostepmodel,df)\n#' head(scoredata)\n#' }\nsetMethod(\"classificationandregression.linearregression\", signature(data = \"DataFrame\"),\n          function(\n            data,\n            formula = NULL,\n            inputFieldList = NULL,\n            targetField = NULL,\n            freqField = NULL,\n            recordIDFieldList = NULL,\n            regrWeightField = NULL,\n            factorSortOrder = c(\"ASCENDING\",\"DESCENDING\"),\n            intercept = TRUE,\n            plotCutPointNum = 19,\n            turnOnFactorSortOrder = TRUE,\n            useCustomMaxEffects = FALSE,\n            varSelectionMethod = c(\"forwardStepwise\", \"bestSubsets\", \"lasso\", \"ridge\", \"elasticNet\", \"none\"),\n            ...){\n            factorSortOrder <- match.arg(factorSortOrder)\n            varSelectionMethod <- match.arg(varSelectionMethod)\n            LinearRegressionModel(\n              SPSSModel(jobj = spss.LinearRegression.fit(data, formula, inputFieldList, targetField,\n                                                    freqField = freqField,\n                                                    recordIDFieldList = recordIDFieldList,\n                                                    regrWeightField = regrWeightField,\n                                                    factorSortOrder = factorSortOrder,\n                                                    intercept = intercept,\n                                                    plotCutPointNum = plotCutPointNum,\n                                                    turnOnFactorSortOrder = turnOnFactorSortOrder,\n                                                    useCustomMaxEffects = useCustomMaxEffects,\n                                                    varSelectionMethod = varSelectionMethod,\n                                                ...)),\n              name = \"LinearRegressionModel\")\n          })\n\n# Major function call for linear\nspss.LinearRegression.fit <- function(\n  data,\n  formula,\n  inputFieldList,\n  targetField,\n  ...\n){\n  linear <- SparkR:::callJStatic(\"com.ibm.spss.ml.classificationandregression.LinearRegression\",\"apply\")\n  advanceArgs = list(...)\n  lapply(seq_along(advanceArgs), function(i){\n    if(!is.null(advanceArgs[[i]])){\n      parameterName <- names(advanceArgs[i])\n      head <- toupper(substr(parameterName,0,1))\n      tril <- substring(parameterName,2)\n      functionName <- paste(\"set\",head,tril,sep=\"\")\n      value <- spss.util.parameterSwitch(spss.LinearRegression.parameterType, parameterName, advanceArgs[[i]])\n      print(paste(functionName, \"(\", value, \")\"))\n      SparkR:::callJMethod(linear,functionName,value)\n    }\n  })\n  print(\"Done Parameter set\")\n  if(!is.null(formula)){\n    formula <- paste(deparse(formula), collapse = \"\")\n    rmodel <- SparkR:::callJStatic(\"com.ibm.spss.ml.r.RWrapper\",\"fitWithRFormula\", linear, formula, df@sdf)\n  }else{\n    SparkR:::callJMethod(linear,\"setInputFieldList\",as.array(inputFieldList))\n    SparkR:::callJMethod(linear,\"setTargetField\",targetField)\n    rmodel <- SparkR:::callJStatic(\"com.ibm.spss.ml.r.RWrapper\",\"fit\", linear, df@sdf)\n  }\n  rmodel\n}\n\n\n\nspss.LinearRegression.parameterType <- list(\n  randomSeed = \"IntParam\",\n  PIn = \"DoubleParam\",\n  maxParamsAllEffects = \"IntParam\",\n  numOfExportedOutliers = \"IntParam\",\n  criteria4ForwardStepwise = \"Param[String]\",\n  CIn = \"DoubleParam\",\n  factorSortOrder = \"Param[String]\",\n  detectInfluentialOutliers = \"BooleanParam\",\n  detectTwoWayInteraction = \"BooleanParam\",\n  varSelectionMethod = \"Param[String]\",\n  maxSteps = \"IntParam\",\n  maxEffects4AllPossibleSubsets = \"IntParam\",\n  detectInteractionMaxIter = \"IntParam\",\n  forwardStepwiseRule = \"Param[String]\",\n  freqField = \"Param[String]\",\n  m1InteractionEffects = \"IntParam\",\n  detectInteractionSig = \"DoubleParam\",\n  criteria4BestSubsets = \"Param[String]\",\n  recordIDFieldList = \"StringArrayParam\",\n  diagnosticPlots = \"BooleanParam\",\n  effectSizeType4Coefficients = \"Param[String]\",\n  regrWeightField = \"Param[String]\",\n  sigLevel = \"DoubleParam\",\n  factorsCombinationsThreshold = \"IntParam\",\n  plotCutPointNum = \"IntParam\",\n  intercept = \"BooleanParam\",\n  detectInteractionTol = \"DoubleParam\",\n  detectUnusualCategories = \"BooleanParam\",\n  useCustomMaxSteps = \"BooleanParam\",\n  effectSizeType4ModelEffects = \"Param[String]\",\n  m2SelectedMainEffects = \"IntParam\",\n  POut = \"DoubleParam\",\n  homoTest = \"BooleanParam\",\n  robustEstimator = \"Param[String]\",\n  effectEntryTol = \"DoubleParam\",\n  useCustomMaxEffects = \"BooleanParam\",\n  plotBinThreshold = \"IntParam\",\n  maxEffects = \"IntParam\",\n  numOfModelsToExport = \"IntParam\",\n  turnOnFactorSortOrder = \"BooleanParam\"\n)\n",
    "created" : 1478846167016.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3155887968",
    "id" : "B87BED93",
    "lastKnownWriteTime" : 1480660636,
    "last_content_update" : 1480660636114,
    "path" : "C:/aWorkFolder/gitibm/project/spark-spss-r-pkg/SPSSonSparkR/R/linearregression.R",
    "project_path" : "R/linearregression.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}