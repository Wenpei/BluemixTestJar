% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generics.R, R/twostep.R
\docType{methods}
\name{clustering.twostep}
\alias{clustering.twostep}
\title{Two-Step Cluster}
\usage{
clustering.twostep(data, formula, ...)

\S4method{clustering.twostep}{DataFrame,formula}(data, formula,
  standardizeFieldList = c(""), autoClustering = TRUE,
  featureSelection = TRUE, outlierHandling = TRUE, ...)
}
\arguments{
\item{standardizeFieldList}{Parameter for specifying one set of input continuous fields that
needs to be standardized. Every field in this set must have two statistics
"mean" and "variance" in the input data model, otherwise this field will be
not standardized. For example about data model: <Field measure="continuous"
name="Cost" role="input" storage="real"> <ContinuousStatistics mean="54.909"
variance="806.252" sumCompWts="200" sumFreqWts="200"/> </Field>}

\item{autoClustering}{If set to True, the algorithm will automatically determine the best
number of clusters, within the specified range. Default: true.}

\item{featureSelection}{Param for doing adaptive feature selection or not. Default: true. The
adaptive feature selection is a heavyweight operation,so it's time-consuming;
the required time is proportional to the number of fields.}

\item{outlierHandling}{Param for outlier handling option. Default: true.}

\item{categoryMajorityThreshold}{Categorical fields with a percentage of cases in a single category
greater than the specified value are excluded from the analysis. The value
must be greater than 0 and less than 1. Default: 0.95.}

\item{maxClusterNum}{Param for the upper range of cluster number if it's RANGE. Must be >
0. Default: 15.}

\item{autoClusteringMethod}{If you set autoClustering = True, choose from the following
clustering methods used to automatically determine the number of clusters: -
"CRITERION": Information criteria convergence is the ratio of information
criteria corresponding to two current cluster solutions and the first cluster
solution. The criterion used is the one selected in the Clustering Criterion
group. - "DISTANCEJUMP": Distance jump is the ratio of distances corresponding
to two consecutive cluster solutions. - "MAXIMUM": Combine results from the
information criteria convergence method and the distance jump method to
produce the number of clusters corresponding to the second jump. - "MINIMUM":
Combine results from the information criteria convergence method and the
distance jump method to produce the number of clusters corresponding to the
first jump Default: MINIMUM}

\item{featureImportanceMethod}{Feature Importance Method determines how important the features
(fields) are in the cluster solution. The output includes information about
overall feature importance and the importance of each feature field in each
cluster. Features that do not meet a minimum threshold are excluded: -
"CRITERION": Based on the criterion that is selected in the Clustering
Criterion group. - "EFFECTSIZE": Feature importance is based on effect size
instead of significance values. Default: CRITERION}

\item{maxEntNonLeaf}{Param for the max number of entries that a non leaf node can hold.
Must be > 0. Default: 8.}

\item{missingValueThreshold}{Param for the portion of missing value in any feature. Must be >= 0
and <= 1. Default: 0.7. If the missing value portion larger than this value,
exclude the feature.}

\item{outlierClusterNum}{Parameter for specifying the number of the most extreme outlier
clusters. Must be > 0. Default: 20. Use to specify the number outliers to
export, used only on outlierHandling=true.}

\item{outlierThreshold}{Param for leaf entry which contains less than this value will
consider as outlier. Must be >= 2. Default: 10.}

\item{maxEntLeaf}{Param for the max number of entries that a leaf node can hold. Must
be > 1. Default: 8.}

\item{minFrequency}{Param for the minimum portion of feature frequency in Feature
Selection. Must be > 0 and < 1. Default: 0.5. This parameter is used for
adaptive feature selection.}

\item{sigLevel}{Param for significance level for computing feature importance. Must
be > 0 and < 1. Default: 0.05. This is used only when
featureImpoMethod=EFFECTSIZE.}

\item{featureFiltering}{Param for doing feature filtering or not. Default: true.}

\item{coefficientThreshold}{Param for the limit of coefficient of variation of a continuous
feature. Must be >= 0 and <= 1. Default: 0.05. If the coefficient of variation
of a continuous feature is smaller than this value, exclude the feature.}

\item{categoryCountThreshold}{Categorical fields with more than the specified number of categories
are excluded from the analysis. The value must be a positive integer greater
than 0. Default: 24.}

\item{distMeasure}{This selection determines how the similarity between two clusters is
computed: - "LOGLIKELIHOOD": The likelihood measure places a probability
distribution on the fields. Continuous fields are assumed to be normally
distributed, while categorical fields are assumed to be multinomial. All
fields are assumed to be independent. - "EUCLIDEAN": The Euclidean measure is
the "straight line" distance between two clusters. Squared Euclidean measure
and the Ward method are used to compute similarity between clusters. It can be
used only when all of the fields are continuous. Default: LOGLIKELIHOOD}

\item{maxTreeHeight}{Param for maximum height of the Tree. Must be > 0. Default: 3.}

\item{minClusterNum}{Param for the lower range of cluster number if it's RANGE. Must be >
1. Default: 2. This value should smaller or equal with maxClusterNum.}

\item{fixedClusterNum}{Param for the number of cluster if it's FIXED. Must be > 1. Default:
5.}

\item{informationCriterion}{This selection controls how the automatic clustering algorithm
determines the number of clusters: - "BIC": A measure for selecting and
comparing models based on the -2 log likelihood. Smaller values indicate
better models. The BIC also "penalizes" overparameterized models (complex
models with a large number of inputs, for example), but more strictly than the
AIC. - "AIC": A measure for selecting and comparing models based on the -2 log
likelihood. Smaller values indicate better models. The AIC "penalizes"
overparameterized models (complex models with a large number of inputs, for
example). Default: BIC}
}
\description{
Scalable Two-Step is based on the familiar two-step clustering algorithm but extends both
its functionality and performance in several directions.
First, it can effectively work with large and distributed data supported by Spark that
provides the Map-Reduce computing paradigm.
Second, the algorithm provides mechanisms for selecting the most relevant features for
clustering the given data, as well as detecting rare outlier points. Moreover, it provides
an enhanced set of evaluation and diagnostic features for enabling insight.
The algorithm of two-step clustering first performs a pre-clustering step by scanning the
entire dataset and storing the dense regions of data cases in terms of summary statistics
called cluster features. The cluster features are stored in memory in a data structure
called the CF-tree. Finally, an agglomerative hierarchical clustering algorithm is applied
to cluster the set of cluster features.
}
\examples{
\dontrun{
sc <- sparkR.init()
data(iris)
sqlContext <- sparkRSQL.init(sc)
df <- createDataFrame(sqlContext, iris)
twostepmodel <- clustering.twostep(df,~Sepal_Length+Sepal_Width)

scoredata <- predict(twostepmodel,df)
head(scoredata)
}
}

